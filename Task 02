#task 02 - Password Complexity Checker

import re

COMMON_PASSWORDS = ["password", "123456", "qwerty", "admin", "letmein", "abc123"]

def check_password_advanced(password):
    score = 0
    feedback = []

    # Length check
    if len(password) >= 8:
        score += 2
    else:
        feedback.append("Use at least 8 characters.")

    # Uppercase
    if re.search(r"[A-Z]", password):
        score += 1
    else:
        feedback.append("Add at least one uppercase letter.")

    # Lowercase
    if re.search(r"[a-z]", password):
        score += 1
    else:
        feedback.append("Add at least one lowercase letter.")

    # Digits
    if re.search(r"[0-9]", password):
        score += 1
    else:
        feedback.append("Include at least one number.")

    # Special characters
    if re.search(r"[!@#$%^&*()_+=\-{}\[\]:;\"'<>,.?/~`|]", password):
        score += 2
    else:
        feedback.append("Add special characters like !@#$%.")

    # Common password check
    if password.lower() in COMMON_PASSWORDS:
        feedback.append("This password is too common.")
    else:
        score += 1

    # Check for repeated characters (e.g., aaa111)
    if re.search(r"(.)\1\1", password):
        feedback.append("Avoid repeated characters or obvious patterns.")
    else:
        score += 1

    # Final assessment
    print("\nPassword Score:", score, "/ 10")
    if score >= 9:
        print("\033[92mStrength: Excellent\033[0m")
    elif score >= 7:
        print("\033[94mStrength: Good\033[0m")
    elif score >= 5:
        print("\033[93mStrength: Fair\033[0m")
    else:
        print("\033[91mStrength: Weak\033[0m")

    # Suggestions
    if feedback:
        print("\nSuggestions:")
        for item in feedback:
            print("-", item)
    else:
        print("Great job! Your password is strong.")

# Example usage
password = input("Enter your password: ")
check_password_advanced(password)
