#task 03 - Network Packet Analyzer
#Network keylogger 
from scapy.all import sniff, IP, TCP, UDP, ICMP, Raw

def analyze_packet(packet):
    print("\n--- Packet Captured ---")

    if IP in packet:
        ip_layer = packet[IP]
        print(f"Source IP: {ip_layer.src}")
        print(f"Destination IP: {ip_layer.dst}")

        # Determine protocol
        if TCP in packet:
            print("Protocol: TCP")
            print(f"Source Port: {packet[TCP].sport}")
            print(f"Destination Port: {packet[TCP].dport}")
        elif UDP in packet:
            print("Protocol: UDP")
            print(f"Source Port: {packet[UDP].sport}")
            print(f"Destination Port: {packet[UDP].dport}")
        elif ICMP in packet:
            print("Protocol: ICMP")
        else:
            print("Protocol: Other")

        # Optional payload display
        if Raw in packet:
            payload = packet[Raw].load
            print(f"Payload (first 100 bytes): {payload[:100]!r}")

def main():
    print("[*] Starting Packet Sniffer (Press Ctrl+C to stop)...")
    sniff(prn=analyze_packet, store=0)

if __name__ == "__main__":
    main()
